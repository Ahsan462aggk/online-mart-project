version: '3.8'
name: template01
services:
  inventory:
    image: todo-mart-api
    build:
      context: ./inventory-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./inventory-service:/code  # Sync local development directory with the container
    depends_on:
        - postgres_inventory_db
    ports:
      - "8009:8000"  # Expose container port 8000 to host port 8000  
 
  ProductService:
    image: product-mart-api
    build:
      context: ./products
      dockerfile: Dockerfile.dev
    volumes:
      - ./products:/code  # Sync local development directory with the container
    depends_on:
        - postgres_product_db
    ports:
      - "8005:8000"  # Expose container port 8000 to host port 8000          
  user-service:
    image: user-mart-api7
    build:
      context: ./users
      dockerfile: Dockerfile.dev
    volumes:
      - ./users:/code  # Sync local development directory with the container
    depends_on:
      - postgres_user_db
    ports:
    - "8006:8000"  # Expose container port 8000 to host
  
  postgres_product_db:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: PostgresproductsCont
    environment:
      - POSTGRES_USER=ziakhan
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=mydatabase
    ports:
      - '5434:5432'
    volumes:
      - postgres_product_db:/var/lib/postgresql/data
  postgres_user_db:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: PostgresuserCont
    environment:
        - POSTGRES_USER=ziakhan
        - POSTGRES_PASSWORD=my_password
        - POSTGRES_DB=mydatabase
    ports:
        - '5435:5432'
    volumes:
        - postgres_user_db:/var/lib/postgresql/data
  postgres_inventory_db:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: PostgresinventoryCont
    environment:
      - POSTGRES_USER=ziakhan
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=mydatabase
    ports:
      - '5436:5432'
    volumes:
      - postgres_product_db:/var/lib/postgresql/data                      
  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
      
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker
  # Schema Registry Service: We will use the Confluent Schema Registry image in Next Step
  # schema-registry:
  #   image: confluentinc/cp-schema-registry:6.1.1
  #   depends_on:
  #     - broker
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:19092
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
  # Init Kafka Service
  # init-kafka:
  #   build:
  #     context: ./init/kafka/
  #   depends_on:
  #     - broker
  #   environment:
  #     KAFKA_HOST: broker
  #     KAFKA_PORT: 9092
  #     KAFKA_CREATE_TOPICS: "table-update:1:1,error:1:1,ms-order-inbox-topic:1:1,ms-order-inbox-error-topic:1:1,ms-order-outbox-topic:1:1"
volumes:
  postgres_db:
    driver: local
  postgres_product_db:
    driver: local
  postgres_user_db:
    driver: local  
  postgres_inventory_db:
    driver: local
networks:
  default:
    driver: bridge
